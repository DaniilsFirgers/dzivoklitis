version: '3.8'

services:
  flats-pooler:
    container_name: flats-pooler
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      TELEGRAM_TOKEN : ${TELEGRAM_TOKEN}
      ADMIN_TELEGRAM_ID : ${ADMIN_TELEGRAM_ID}

    volumes:
      - ./configs/config.toml:/app/config.toml 
      - ./configs/settings.json:/app/settings.json

    command: python3.10 -u /app/scraper/main.py
    networks:
      - flats-analyzer

  postgres:
    image: postgis/postgis:13-3.3 
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - flats-analyzer

  # ngrok:
  #   image: wernight/ngrok
  #   container_name: ngrok
  #   ports:
  #     - "4040:4040"
  #   environment:
  #     NGROK_PORT: 4040
  #     NGROK_PROTOCOL: http
  #     NGROK_AUTH: ${NGROK_AUTHTOKEN}
  #   command: ngrok http --domain=${NGROK_DOMAIN} telegram-webapp:80
  #   depends_on:
  #     - flats-pooler
  #   networks:
  #     - flats-analyzer
    
networks:
  flats-analyzer:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data 